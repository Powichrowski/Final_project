package pl.finalproject.accessingdatamysql.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import pl.finalproject.accessingdatamysql.model.Income;
import pl.finalproject.accessingdatamysql.model.User;
import pl.finalproject.accessingdatamysql.model.Vat;
import pl.finalproject.accessingdatamysql.repository.IncomeRepository;
import pl.finalproject.accessingdatamysql.repository.UserRepository;
import pl.finalproject.accessingdatamysql.repository.VatRepository;

import javax.transaction.Transactional;
import java.util.List;

@Controller // This means that this class is a Controller
@RequestMapping(path = "/user")
public class UserController {

    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    @Autowired
    private VatRepository vatRepository;

    @Autowired
    private IncomeRepository incomeRepository;

    @Transactional
    @PostMapping(path = "/signing-check") // Map ONLY POST Requests
    public String addNewUser(@RequestParam String login,
                             @RequestParam String email,
                             @RequestParam String password,
                             Model model) {

        if (login != null && !login.isBlank() && email != null && !email.isBlank() && password != null && !password.isBlank()) {
            List<User> userList = (List<User>) userRepository.findAll();
            for (User u : userList) {
                if (u.getLogin().equals(login)) {
                    String msg = "Użytkownik o takich danych już istnieje";
                    model.addAttribute("msg", msg);
                    return "createUser";
                }
            }
            User user = new User();
            user.setLogin(login);
            user.setEmail(email);
            user.setPassword(password);

            Vat vat = new Vat();
            user.setVat(vat);

            Income income = new Income();
            user.setIncome(income);

            vatRepository.save(vat);
            incomeRepository.save(income);
            userRepository.save(user);
            return "savedUserSuccess";
        } else {
            String msg = "Niepoprawne dane";
            model.addAttribute("msg", msg);
            return "createUser";
        }
    }

}
